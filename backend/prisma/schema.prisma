// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// npx prisma migrate dev --name init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            Int            @id @default(autoincrement())
  email         String         @unique
  password      String
  refreshTokens RefreshToken[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  avatar        String         @default("")
  studentProfile StudentProfile?
  employerProfile EmployerProfile?
}

model StudentProfile {
  id     Int      @id @unique @default(autoincrement())
  userId Int      @unique
  lastName String @default("")
  firstName String @default("")
  patronymic String @default("")

  // Добавьте поля, специфичные для студентов
  // Например: имя, фамилия, учебное заведение и др.
  user   User     @relation(fields: [userId], references: [id])
  portfolio PortfolioDocument[]
  educations StudentEducation[]
}

model StudentEducation {
    id     Int      @id @unique @default(autoincrement())
    name   String
    specialization String
    faculty String
    period  String
    studentId Int
    student StudentProfile @relation(fields: [studentId], references: [id])
}

model PortfolioDocument {
  id     Int      @id @unique @default(autoincrement())
  type   String
  name   String
  description   String
  studentId Int
  student StudentProfile @relation(fields: [studentId], references: [id])
  portfolioFile PortfolioFile[]
}

model PortfolioFile {
  id     Int      @id @unique @default(autoincrement())
  url   String
  size  Int       @default(1)
  mimeType String
  portfolioDocumentId Int
  portfolioDocument PortfolioDocument @relation(fields: [portfolioDocumentId], references: [id])
}

model EmployerProfile {
  id     Int      @id @unique @default(autoincrement())
  userId Int      @unique
  balance Int     @default(0)
  companyName String @default("")
  companyAddress String @default("")
  // Добавьте поля, специфичные для работодателей
  // Например: название компании, отрасль и др.
  user   User     @relation(fields: [userId], references: [id])
  payment PaymentAction[]
}

enum TransactionType {
    DEPOSIT
    SUBSCRIPTION_PAYMENT
    STUDENT_PAYMENT
}

model PaymentAction {
    id     Int      @id @unique @default(autoincrement())
    value  Int
    type   String
    //studentId Int
    //student StudentProfile @relation(fields: [studentId], references: [id])
    createdAt     DateTime       @default(now())
    employerId Int
    employer EmployerProfile @relation(fields: [employerId], references: [id])
}

model RefreshToken {
  id          String   @id @unique @default(uuid())
  hashedToken String
  userId      Int
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
